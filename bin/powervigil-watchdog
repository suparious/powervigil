#!/bin/bash

################################################################################
# PowerVigil™ - Kiosk Performance & Recovery Framework
# Copyright (C) 2025 - GPL v3 License
# 
# Watchdog Module
# Version: 1.0.0
# 
# Active monitoring and automatic recovery for display responsiveness
################################################################################

# Configuration
POWERVIGIL_VERSION="1.0.0"
LOG_FILE="/var/log/powervigil/watchdog.log"
CHECK_INTERVAL=60  # Check every 60 seconds
MAX_FAILURES=3     # Number of failures before taking action
DISPLAY_TO_CHECK="${DISPLAY:-:0}"

# Counter for consecutive failures
FAILURE_COUNT=0

# Ensure log directory exists
mkdir -p /var/log/powervigil

log_message() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] PowerVigil™ Watchdog: $1" >> "$LOG_FILE"
}

check_display_responsive() {
    # Try to query X server
    DISPLAY=$DISPLAY_TO_CHECK timeout 5 xset q &>/dev/null
    return $?
}

restart_display_manager() {
    log_message "Attempting to restart display manager..."
    
    # Detect and restart the appropriate display manager
    if systemctl is-active gdm3 &>/dev/null; then
        systemctl restart gdm3
        log_message "Restarted GDM3"
    elif systemctl is-active lightdm &>/dev/null; then
        systemctl restart lightdm
        log_message "Restarted LightDM"
    elif systemctl is-active sddm &>/dev/null; then
        systemctl restart sddm
        log_message "Restarted SDDM"
    elif systemctl is-active xdm &>/dev/null; then
        systemctl restart xdm
        log_message "Restarted XDM"
    else
        log_message "No known display manager found, attempting X restart"
        pkill -HUP Xorg || pkill -HUP X
    fi
}

apply_power_settings() {
    # Reapply critical power settings
    log_message "Reapplying PowerVigil™ protection layers..."
    
    # Disable DPMS
    DISPLAY=$DISPLAY_TO_CHECK xset -dpms 2>/dev/null || true
    DISPLAY=$DISPLAY_TO_CHECK xset s off 2>/dev/null || true
    DISPLAY=$DISPLAY_TO_CHECK xset s noblank 2>/dev/null || true
    
    # Ensure performance mode
    for cpu in /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor; do
        echo "performance" > "$cpu" 2>/dev/null || true
    done
    
    # Wake up display
    DISPLAY=$DISPLAY_TO_CHECK xset dpms force on 2>/dev/null || true
    
    # Disable console blanking
    echo 0 > /sys/module/kernel/parameters/consoleblank 2>/dev/null || true
    
    # USB wake
    for i in /sys/bus/usb/devices/*/power/control; do
        echo "on" > "$i" 2>/dev/null || true
    done
}

recover_display() {
    log_message "Initiating display recovery sequence..."
    
    # Step 1: Force display on and reapply settings
    DISPLAY=$DISPLAY_TO_CHECK xset dpms force on 2>/dev/null || true
    apply_power_settings
    
    sleep 5
    
    # Check if recovery worked
    if ! check_display_responsive; then
        # Step 2: More aggressive recovery - restart display manager
        log_message "Settings reapplication failed, restarting display manager..."
        restart_display_manager
        sleep 30  # Give display manager time to restart
    else
        log_message "Display recovered successfully with settings reapplication"
    fi
}

# Main watchdog loop
log_message "PowerVigil™ Watchdog v$POWERVIGIL_VERSION started"
log_message "Monitoring display: $DISPLAY_TO_CHECK"
log_message "Check interval: ${CHECK_INTERVAL}s, Max failures: $MAX_FAILURES"

while true; do
    if check_display_responsive; then
        if [ $FAILURE_COUNT -gt 0 ]; then
            log_message "Display responsive again after $FAILURE_COUNT failures"
            FAILURE_COUNT=0
        fi
        
        # Proactively reapply settings periodically
        apply_power_settings
    else
        ((FAILURE_COUNT++))
        log_message "Display not responsive (failure #$FAILURE_COUNT)"
        
        if [ $FAILURE_COUNT -ge $MAX_FAILURES ]; then
            log_message "Max failures reached, initiating recovery..."
            recover_display
            FAILURE_COUNT=0
        fi
    fi
    
    sleep $CHECK_INTERVAL
done
